{
  "_from": "views",
  "_id": "views@1.0.2",
  "_inBundle": false,
  "_integrity": "sha1-nMWfgPzRE1nrYOVdb4p3DPKtyNE=",
  "_location": "/views",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "views",
    "fetchSpec": "latest",
    "name": "views",
    "raw": "views",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/views/-/views-1.0.2.tgz",
  "_shasum": "9cc59f80fcd11359eb60e55d6f8a770cf2adc8d1",
  "_shrinkwrap": null,
  "_spec": "views",
  "_where": "/home/mohit/Desktop/vscode/muj",
  "author": {
    "name": "Brian Link"
  },
  "bugs": {
    "url": "https://github.com/cpsubrian/node-views/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "async": "~0.2.6",
    "clone": "~0.1.6",
    "consolidate": "~0.8.0",
    "glob": "~3.1.21",
    "tea-merge": "~0.1.0"
  },
  "deprecated": false,
  "description": "Views registry and rendering",
  "devDependencies": {
    "benchmarx": "~0.2.5",
    "handlebars": "~1.0.10",
    "middler": "~0.6.1",
    "mocha": "~1.8.2",
    "request": "~2.16.0"
  },
  "engines": {
    "node": ">= 0.8.0"
  },
  "homepage": "https://github.com/cpsubrian/node-views#readme",
  "keywords": [
    "partials",
    "render",
    "templates",
    "views"
  ],
  "license": "MIT",
  "main": "views.js",
  "name": "views",
  "optionalDependencies": {},
  "readme": "node-views\n==========\n\nViews registry and rendering for node.js.\n\n[![build status](https://secure.travis-ci.org/cpsubrian/node-views.png)](http://travis-ci.org/cpsubrian/node-views)\n\nFeatures\n--------\n- Register one or more views namespaces (relative path -> absolute path)\n- Render templates with or without layouts\n- Use any templating engine that [consolidate.js](https://github.com/visionmedia/consolidate.js) supports\n- Supports 'helpers' (static or dynamically generated data exposed to templates)\n- Provides an easy-to-use middleware compatible with connect or middler.\n\nChanges for 1.x\n---------------\n\nFor views 1.x I did some cleanup and optimization. This involved changes that could\nhave an impact on your implementation of views.\n\n- Removed built-in support for flatiron.\n- Stopped using proto-list-deep internally, instead opting for tea-merge.\n    - Note: tea-merge is pretty strict about what it will merge together. If\n            you were previously adding complex objects into your conf or helpers\n            you may see merge errors. The only way to resolve this is to make\n            sure your conf and helpers are JavaScript primitives and avoid\n            clashes between object types at the same key.\n- Updated dependency versions. For Handlebars users this should speed up rendering\n  significantly if you turn caching on, as consolidate now appears to use it\n  properly.\n\nExamples\n--------\nSee [./examples](https://github.com/cpsubrian/node-views/tree/master/examples).\n\nUsage\n-----\n**Use with [middler](http://github.com/carlos8f/node-middler)**\n\n```js\nvar middler = require('middler'),\n    views = require('views'),\n    server = require('http').createServer(),\n    registry = views.createRegistry(__dirname + '/views'); // <-- Your views directory\n\nmiddler(server)\n  .add(views.middleware(registry))\n  .add(function(req, res, next) {\n    // The middleware exposes res.render() and res.renderStatus()\n    res.render('index', {title: 'My Middler Example', name: 'Brian'});\n  });\n\nserver.listen(3000, function() {\n  console.log('Listening on http:/localhost:3000');\n});\n```\n\n**Use the API manually**\n\n```js\nvar path = require('path'),\n    http = require('http');\n\nvar views = require('views').createRegistry({\n  // These are the defaults but you can override them.\n  layout: 'layout',\n  ext: 'hbs',\n  engine: 'handlebars'\n});\n\n// Register a default namespace.\nviews.register(path.join(__dirname, 'views'));\n\n// Register an alternate namespace with custom options.\nviews.register('jade', path.join(__dirname, 'jade_views'), {ext: 'html', engine: 'jade'});\n\n// Now you can use render or renderStatus inside your http request handlers.\nvar server = http.createServer(function(req, res) {\n  if (req.url === '/') {\n    views.render(req, res, 'index', {title: 'Home Page'});\n  }\n  else if (req.url === '/foo') {\n    views.render(req, res, 'foo', {title: 'Foo Bar'});\n  }\n  else {\n    // Render status will look for status-404.[ext] and render it.\n    // If a matching status template does not exist then it will just write\n    // a standard status message.\n    views.renderStatus(404);\n  }\n});\nserver.listen(8080);\n```\n\nPartials\n--------\n\nViews 0.2.x supported 'partials' by pre-rendering templates that were\nregistered with `view.partials()`.  This functionality was removed in\n0.3.0 in favor of utilizing native partials support provided by the\ntemplating engines themselves. This was done for a few reasons:\n\n- Performance. Previously, all registered partials were re-rendered for every\nrequest, whether or not they were used.\n- Recursion. To avoid crazy performance costs, partials were cached per\nrequest, but this meant ceratin recursive use-cases for partials were\nbroken.\n- Simplicity. Partials are complicated. Its seemed prudent to piggy back on the\ngreat work being done in consolidate.js and template engines rather than\nreinvent the wheel.\n\n- - -\n\n### Developed by [Terra Eclipse](http://www.terraeclipse.com)\nTerra Eclipse, Inc. is a nationally recognized political technology and\nstrategy firm located in Aptos, CA and Washington, D.C.\n\n- - -\n\n### License: MIT\nCopyright (C) 2012 Terra Eclipse, Inc. ([http://www.terraeclipse.com](http://www.terraeclipse.com))\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is furnished\nto do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/cpsubrian/node-views.git"
  },
  "scripts": {
    "test": "mocha --reporter spec"
  },
  "version": "1.0.2"
}
